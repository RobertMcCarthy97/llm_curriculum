"\ndef is_beside_blue_box(observation) -> bool:\n    \"\"\"\n    This function checks if the agent is beside the blue box.\n    \n    We're assuming that 'beside' means that the agent is one cell away from the box, \n    either horizontally or vertically, but not diagonally. In other words, we're using \n    the Manhattan distance with a distance of 1, and not use the Euclidean distance.\n    \n    Furthermore, we assume that if the blue box is not in the field_of_view, the agent cannot be next to it, \n    and function should return False. \n    \n    We're also assuming the environment is a grid, and positions are given as (x, y) pairs, \n    where x increases to the right and y increases downward. Hence, we simply subtract coordinates to calculate distance.\n    \n    :param observation: A dictionary that contains the full observation.\n    :return: True if the agent is beside the blue box, False otherwise.\n    \"\"\"\n    agent_pos = observation['agent_info']['position']\n    blue_box = observation['field_of_view'].get('blue_box')  # returns None if blue_box is not in the field_of_view\n\n    if blue_box is None: # Blue box is not in field_of_view\n        return False\n\n    blue_box_pos = blue_box['position']\n\n    dx = abs(agent_pos[0] - blue_box_pos[0])\n    dy = abs(agent_pos[1] - blue_box_pos[1])\n\n    return (dx, dy) in [(1, 0), (0, 1)]\n"