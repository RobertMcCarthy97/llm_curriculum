"\ndef is_beside_blue_box(observation) -> bool:\n    \"\"\"\n    This function checks if the agent is beside the blue box.\n    \n    Like the red box example, 'beside' is considered as the agent being in a cell immediately next to \n    the blue box, either horizontally or vertically, not diagonally. This interprets to using \n    the Manhattan distance with a distance of 1. \n\n    We're still assuming that the grid defines positions in (x, y) pairs, with x coordinates increasing \n    to the right, and y coordinates increasing downwards. Thus, we can subtract the coordinates \n    to calculate the distance.\n\n    If the blue box is not in the 'field_of_view' then it can be assumed that the agent cannot \n    feasibly be next to it, hence in this case, the function will return False. \n\n    :param observation: A dictionary containing the agent's observation.\n    :return: True, if the agent is next to the blue box, False otherwise.\n    \"\"\"\n    \n    # Checking if the blue box is visible to the agent.\n    if \"blue_box\" in observation[\"field_of_view\"]:\n        agent_pos = observation['agent_info']['position']\n        blue_box_pos = observation['field_of_view']['blue_box']['position']\n        dx = abs(agent_pos[0] - blue_box_pos[0])\n        dy = abs(agent_pos[1] - blue_box_pos[1])\n        return (dx, dy) in [(1, 0), (0, 1)]\n        \n    else:\n        # If the blue_box is not in the 'field_of_view', we can safely assume the agent is not next to it.\n        return False\n"