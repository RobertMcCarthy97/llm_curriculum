"\ndef is_next_to_yellow_door(observation) -> bool:\n    \"\"\"\n    This function checks if the agent is next to the yellow door.\n\n    Similar to the example provided, we make the assumption that 'next to' implies the agent is within one cell's distance\n    from the door, either horizontally or vertically, and not diagonally. This corresponds to the Manhattan distance of 1,\n    as opposed to the Euclidean distance.\n\n    We also view the environment as a grid-based layout, in which positions are represented as (x, y) pairs, \n    with 'x' increasing towards the right and 'y' increasing downwards. As such, we can simply subtract the coordinates\n    to find out the distance.\n\n    The function uses the position information provided in the 'agent_info' and 'yellow_door' fields of the observation\n    to determine if the agent is next to the door.\n\n    :param observation: A dictionary containing the agent's observation.\n    :return: True if the agent is next to the yellow door, False otherwise.\n    \"\"\"\n    agent_pos = observation['agent_info']['position']\n    yellow_door_pos = observation['field_of_view']['yellow_door']['position']\n\n    dx = abs(agent_pos[0] - yellow_door_pos[0])\n    dy = abs(agent_pos[1] - yellow_door_pos[1])\n\n    return (dx, dy) in [(1, 0), (0, 1)]\n"