"\ndef is_beside_red_ball(observation) -> bool:\n    \"\"\"\n    This function checks if the agent is beside the red ball.\n\n    We're assuming that 'beside' means that the agent is one cell away from the ball,\n    either horizontally or vertically, not diagonally. In other words, we're using the \n    Manhattan distance with a distance of 1, and not the Euclidean distance.\n\n    We're also assuming that the environment is a grid, with positions given as (x, y) pairs,\n    where x increases to the right, and y increases downward. This is why we can just subtract \n    the coordinates to compute the distance.\n\n    We're also assuming that the \"red_ball\" is in the \"field_of_view\" when the function is called.\n    If it's not, the function may raise a KeyError.\n\n    :param observation: A dictionary containing the observation.\n    :return: True if the agent is next to the red ball, otherwise False.\n    \"\"\"\n    agent_pos = observation['agent_info']['position']\n    red_ball_pos = observation['field_of_view']['red_ball']['position']\n\n    dx = abs(agent_pos[0] - red_ball_pos[0])\n    dy = abs(agent_pos[1] - red_ball_pos[1])\n\n    return (dx, dy) in [(1, 0), (0, 1)]\n"