"\ndef is_carrying_red_key_beside_red_door(observation) -> bool:\n    \"\"\"\n    This function checks if the agent is carrying a red key and is next to the red door.\n    \n    Assumptions: \n    1. 'Beside' is defined as being a single cell away from the door, either horizontally \n       or vertically, but not diagonally (Manhattan distance of 1).\n    2. The environment is a grid, where position coordinates are represented as (x, y) pairs,\n       with x increasing to the right and y increasing downward.\n    3. If the agent is carrying an item, it is represented by a string in the 'carrying' field \n       of the 'agent_info' dictionary. \n    4. The red door's position is provided in the field_of_view dictionary as ['red_door']['position'].\n\n    :param observation: A dictionary containing the observation.\n    :return: True if the agent is carrying a red key and is beside the red door, False otherwise.\n    \"\"\"\n    agent_pos = observation['agent_info']['position']\n    carrying = observation['agent_info']['carrying']\n    red_door_pos = observation['field_of_view']['red_door']['position']\n\n    dx = abs(agent_pos[0] - red_door_pos[0])\n    dy = abs(agent_pos[1] - red_door_pos[1])\n\n    return carrying == 'red_key' and (dx, dy) in [(1, 0), (0, 1)]\n"